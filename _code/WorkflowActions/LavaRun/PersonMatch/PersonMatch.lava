/----------------------------------------------------------------------------------------------------
    This Lava is found in
    WorkflowTypeId=191, [Backend - Person not logged in] > Try to retrieve (PersonAlias_GUID)
    WorkflowTypeId=195, [Backend - No Existing Families] > Try to retrieve (PersonAlias_GUID)
    WorkflowTypeId=203, [Backend - Person not logged in] > Try to retrieve (PersonAlias_GUID)
    WorkflowTypeId=210, [Backend - Find Person 1] > Try to retrieve (PersonAlias_GUID)
    WorkflowTypeId=210, [Backend - Find Person 2] > Try to retrieve (PersonAlias_GUID)
    WorkflowTypeId=222, [Backend - (Person_Submitter) not logged in] > Try to retrieve (PersonAlias_GUID)
----------------------------------------------------------------------------------------------------/

//- Define some Variables
{% assign var_PersonAliasGuid = 'tim_blank' %}
{% assign var_option = '' %}
{% assign var_count_1 = 0 %}
{% assign var_count_2 = 0 %}
{% assign var_count_3 = 0 %}
{% assign var_count_4 = 0 %}

{% assign var_Person_FirstName = Workflow | Attribute:'Form_FirstName' | SanitizeSql %}
{% assign var_Person_LastName = Workflow | Attribute:'Form_LastName' | SanitizeSql %}
{% assign var_Person_MobilePhone = Workflow | Attribute:'Form_MobilePhone' | SanitizeSql %}
{% assign var_Person_EmailAddress = Workflow | Attribute:'Form_EmailAddress' | SanitizeSql %}

//- count_1 is FirstName and LastName
{% sql return:'query_1_result' %}
    SELECT TOP 5
        pa.[Guid]
    FROM
        [Person] p
        INNER JOIN [PersonAlias] pa ON p.[Id] = pa.[PersonId]
    WHERE
        (p.[NickName] LIKE '%{{ var_Person_FirstName }}%'
        OR
        p.[FirstName] LIKE '%{{ var_Person_FirstName }}%'
        )
        AND
        p.[LastName] = '{{ var_Person_LastName }}'
    ORDER BY
        p.[CreatedDateTime] ASC
{% endsql %}

{% assign var_count_1 = query_1_result | Size %}

//- count_2 is FirstName, LastName, and MobilePhone
//- The NumberTypeValueIds are 12, 13, 136, and 1015. Of these, 12 is "Mobile Phone", therefore, ORDER BY [NumberTypeValueId] ASC ensures that the TOP result will be MobilePhone, if any
{% if var_count_1 >= 1 and var_Person_MobilePhone != empty %}
    {% sql return:'query_2_result' %}
        SELECT TOP 5
            pa.[Guid]
        FROM
            [Person] p
            INNER JOIN [PersonAlias] pa ON p.[Id] = pa.[PersonId]
            INNER JOIN [PhoneNumber] pn ON p.[Id] = pn.[PersonId]
        WHERE
            (p.[NickName] LIKE '%{{ var_Person_FirstName }}%'
            OR
            p.[FirstName] LIKE '%{{ var_Person_FirstName }}%'
            )
            AND
            p.[LastName] = '{{ var_Person_LastName }}'
            AND
            pn.[NumberFormatted] = '{{ var_Person_MobilePhone }}'
        ORDER BY
            pn.[NumberTypeValueId] ASC
          , p.[CreatedDateTime] ASC
    {% endsql %}

    {% assign var_count_2 = query_2_result | Size %}
{% endif %}

//- count_3 is FirstName, LastName, and Email
{% if var_count_2 >= 1 and var_Person_EmailAddress != empty %}
    {% sql return:'query_3_result' %}
        SELECT TOP 5
            pa.[Guid]
        FROM
            [Person] p
            INNER JOIN [PersonAlias] pa ON p.[Id] = pa.[PersonId]
        WHERE
            (p.[NickName] LIKE '%{{ var_Person_FirstName }}%'
            OR
            p.[FirstName] LIKE '%{{ var_Person_FirstName }}%'
            )
            AND
            p.[LastName] = '{{ var_Person_LastName }}'
            AND
            p.[Email] = '{{ var_Person_EmailAddress }}'
        ORDER BY
            p.[CreatedDateTime] ASC
    {% endsql %}

    {% assign var_count_3 = query_3_result | Size %}
{% endif %}

//- count_4 is FirstName, LastName, Email, and MobilePhone
//- The NumberTypeValueIds are 12, 13, 136, and 1015. Of these, 12 is "Mobile Phone", therefore, ORDER BY [NumberTypeValueId] ASC ensures that the TOP result will be MobilePhone, if any
{% if var_count_3 >= 1 %}
    {% sql return:'query_4_result' %}
        SELECT TOP 5
            pa.[Guid]
        FROM
            [Person] p
            INNER JOIN [PersonAlias] pa ON p.[Id] = pa.[PersonId]
            INNER JOIN [PhoneNumber] pn ON p.[Id] = pn.[PersonId]
        WHERE
            (p.[NickName] LIKE '%{{ var_Person_FirstName }}%'
            OR
            p.[FirstName] LIKE '%{{ var_Person_FirstName }}%'
            )
            AND
            p.[LastName] = '{{ var_Person_LastName }}'
            AND
            p.[Email] = '{{ var_Person_EmailAddress }}'
            AND
            pn.[NumberFormatted] = '{{ var_Person_MobilePhone }}'
        ORDER BY
            pn.[NumberTypeValueId] ASC
          , p.[CreatedDateTime] ASC
    {% endsql %}

    {% assign var_count_4 = query_4_result | Size %}
{% endif %}

{% if var_count_1 == 0 %}          //- No Matches found, create Person
    {% assign var_option = '0' %}
{% elseif var_count_1 == 1 %}      //- query_1 had one match
    {% assign var_option = '1' %}
{% elseif var_count_2 == 1 %}      //- query_2 had one match
    {% assign var_option = '2' %}
{% elseif var_count_3 == 1 %}      //- query_3 had one match
    {% assign var_option = '3' %}
{% elseif var_count_4 >= 1 %}      //- query_4 had one or more matches
    {% assign var_option = '4' %}
{% endif %}

//- Note: If queries return 0, then var_PersonAliasGuid will remain as 'tim_blank'

//- If query_1 had one match
{% if var_option == '1' %}
    //- {% assign var_PersonAliasGuid = query_1_result[0].Guid %}
    //- If "John Doe" has exactly one match, then we should go ahead and create a new Person record. Because matching based on there only being one match with this FirstName LastName is too risky.
{% endif %}

//- If query_2 had one match
{% if var_option == '2' %}
    {% assign var_PersonAliasGuid = query_2_result[0].Guid %}
{% endif %}

//- If query_3 had one match
{% if var_option == '3' %}
    {% assign var_PersonAliasGuid = query_3_result[0].Guid %}
{% endif %}

//- If query_4 is >= 1
{% if var_option == '4' %}
    {% assign var_PersonAliasGuid = query_4_result[0].Guid %}
{% endif %}

{{ var_PersonAliasGuid }}
